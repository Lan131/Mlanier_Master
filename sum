if (!require('pander')) {
  devtools::install_github('Rapporter/pander')
}

if (!require('stringr')) {
  install.packages('stringr')
}

library(pander)
library(stringr)


summation_notation=function(i=1,n=10,formula)
  {
  if(i>n)
  {print("It appears your bounds are mixed. i<n")
    return()}
  
  
  if(grepl("x+",toString(formula))==FALSE)
  {
    print("Your expression doesn't appear to be in terms of x. Please make sure it is only in terms of x.")
    
  }else{
    form=toString(str_replace_all(toString(formula), "x", "i"))
    
    
    sum=0
    
      for(j in i:n)
      {
        
        formula_temp=toString(str_replace_all(toString(form), "i", toString(j)))
          
        sum=sum+as.numeric(pander::evals(formula_temp)[[1]]$result)
        
        
      }
    
      print(paste("Final sum is",sum))
      return(sum)
  }
  
}



product_notation=function(i=1,n=10,formula)
{
  if(i>n)
  {print("It appears your bounds are mixed. i<n")
    return()}
  if(grepl("x+",toString(formula))==FALSE)
  {
    print("Your expression doesn't appear to be in terms of x. Please make sure it is only in terms of x.")
    
  }else{
  form=toString(str_replace_all(toString(formula), "x", "i"))
  product=1
  
  for(j in i:n)
  {
    
    formula_temp=toString(str_replace_all(toString(form), "i", toString(j)))
    
    product=product*as.numeric(pander::evals(formula_temp)[[1]]$result)
  
    
  }
  print(paste("Final product is",product))
  return(product)
  }
  
}
